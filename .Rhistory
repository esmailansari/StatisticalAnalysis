library(rgl)
set.seed(1)
x <- seq(1,10)
y <- seq(1,10)
w <- runif(100)
z <- runif(100)
wcolors <- rainbow(length(w))[rank(w)]
zmat <- matrix(z, length(x),length(y))
persp3d(x=x, y=y, z=zmat, col = wcolors)
install.packages("rgl")
library(rgl)
set.seed(1)
x <- seq(1,10)
y <- seq(1,10)
w <- runif(100)
z <- runif(100)
wcolors <- rainbow(length(w))[rank(w)]
zmat <- matrix(z, length(x),length(y))
persp3d(x=x, y=y, z=zmat, col = wcolors)
contour(x3.grid, x4.grid, matrix(response.grid, n.grid, n.grid), 50, main="Branin")
points(design.fact[,1], design.fact[,2], pch=17, cex=1.5, col="blue")
contour(x.grid, y.grid, matrix(predicted.values.model1, n.grid, n.grid), 50,
main="Ordinary Kriging")
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(design.fact)
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
predict(m1, design.grid, "UK")$mean
predict(m1, design.grid, "OK")$mean
predict(m1, design.grid)$mean
predict(m1, design.grid,"SK")$mean
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
design.fact
design.fact
predict(Ra.fit,newdata=Design.fact)
predict(Ra.fit,newdata=design.fact)
predict(Ra.fit,newdata=design.grid)
predict(Ra.fit,newdata=design.grid)
design.grid
predict(Ra.fit,newdata=design.grid)
predict(Ra.fit)
predict(Ra.fit,newdata=design.grid[1,])
Ra.fit
head(desig.grid)
head(design.grid)
colnames(design.grid)=Factors
Factors = intersect(labels(terms(Ra.fit)),colnames(data))
Factors = intersect(labels(terms(Ra.fit)),colnames(data))
colnames(design.grid)=Factors
head(design.grid)
predict(Ra.fit,design.grid)
rows(design.grid
s
size(design.grid)
dim(design.grid)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
Ra.fit
x3.grid
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
x3.grid
response.grid
size(predicted.values.model1)
dim(predicted.values.model1)
predicted.values.model1
predicted.values.model2
matrix(predicted.values.model1, n.grid, n.grid)
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
install.packages("reshape")
require(reshape)
?melt
require(reshape)
library("reshape2", lib.loc="C:/Users/eansar2/Documents/R/R-3.0.1/library")
install.packages("reshape")
library("reshape", lib.loc="C:/Users/eansar2/Documents/R/R-3.0.1/library")
require(reshape2)
melt(data[[Factors]])
data[[Factors]]
data[Factors]
melt(data[Factors])
melt(data[Factors],id=c('ResDip','PermVar'))
cast(melt(data[Factors],id=c('ResDip','PermVar')),ResDip~variable,mean)
design.grid
y
response.grid
design.grid
cbind(design.grid,response.grid)
cbind(design.grid,response.grid)
head(cbind(design.grid,response.grid))
head(cbind(design.grid,response.grid))
head(cbind(design.grid,response.grid))
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
design.grid
head(design.grid)
head(design.grid)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
x3.grid
x4.grid
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
mean.response
mean.response = matrix(0,c(length(x3.grid),length(x4.grid)))
mean.response
mean.response = matrix(0,c(length(x3.grid),length(x4.grid)))
mean.response
mean.response = matrix(0,c(length(x3.grid),length(x4.grid)))
length(x4.grid)
length(x3.grid)
mean.response = matrix(rep(0,length(x3.grid)*length(x4.grid)),
c(length(x3.grid),length(x4.grid)))
mean.response
for (i in 1:length(x3.grid)) {
for (j in 1:length(x4.grid)){
mean.response[i,j] = mean(response.grid[(design.grid[,3]==x3.grid[i]
&& design.grid[,4]==x4.grid[j])])
}
}
mean.response
response.grid
?which
?whcih
?which
(design.grid[,3]==x3.grid[i]
&& design.grid[,4]==x4.grid[j])
which(design.grid[,3]==x3.grid[3]
&& design.grid[,4]==x4.grid[4])
which(design.grid[design.grid[,3]==x3.grid[3]
, design.grid[,4]==x4.grid[4]])
x3.grid[3]
x4.grid[3]
design.grid[design.grid[,3]==x3.grid,]
design.grid[design.grid[,3]==x3.grid]
which(design.grid[,3]==x3.grid)
which(design.grid[,3]==x3.grid[3])
which(design.grid[,3]==x3.grid[3])
which(design.grid[,3]==x3.grid[3] && design.grid[,4]==x4.grid[4])
which(design.grid[,3]==x3.grid[3] && design.grid[,4]==x4.grid[3])
which(design.grid[,3]==x3.grid[3] & design.grid[,4]==x4.grid[3])
which(design.grid[,3]==x3.grid[3] && design.grid[,4]==x4.grid[3])
which(design.grid[,3]==x3.grid[3] & design.grid[,4]==x4.grid[3])
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
predicted.values.model1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/ContourTest.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
fix(filled.contour3)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
fix(filled.contour3)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
?image
x <- seq(pi/4, 5 * pi, length.out = 100)
y <- seq(pi/4, 5 * pi, length.out = 100)
r <- as.vector(sqrt(outer(x^2, y^2, "+")))
grid <- expand.grid(x=x, y=y)
grid$z <- cos(r^2) * exp(-r/(pi^3))
levelplot(z~x*y, grid, cuts = 50, scales=list(log="e"), xlab="",
ylab="", main="Weird Function", sub="with log scales",
colorkey = FALSE, region = TRUE)
require(lattice)
x <- seq(pi/4, 5 * pi, length.out = 100)
y <- seq(pi/4, 5 * pi, length.out = 100)
r <- as.vector(sqrt(outer(x^2, y^2, "+")))
grid <- expand.grid(x=x, y=y)
grid$z <- cos(r^2) * exp(-r/(pi^3))
levelplot(z~x*y, grid, cuts = 50, scales=list(log="e"), xlab="",
ylab="", main="Weird Function", sub="with log scales",
colorkey = FALSE, region = TRUE)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
range(x4.grid)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
a<-range(x3.grid)
a
class(a)
str(a)
a
a[1]
a[2]
as.vector(a)
a<-as.vector(a)
class(a)
str(a)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
xlim=(range(x3.grid)*0.1)
xlim
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/KrigingReyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
summary(Rascale.fit)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
summary(RaScale.fit)
summary(Ra.fit)
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
library(ggplot2)
print(qplot(fitted(Ra.fit),RaNum_Tmed, data=data,
geom=c("point", "smooth")))
print(qplot(fitted(Ra.fit),RaNum_Tmed, data=data))
colnames(risk) <- in.model
x.lim <- range(risk)
par(mfrow=c(1,1))
barplot(height=unlist(rev(risk[1,])),
horiz=TRUE,names.arg = rev(in.model),
cex.names=0.7,xlab="Sensitivity in Rayligh Number")
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/testdummy.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/testdummy.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/testdummy.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/eansar2/Desktop/Analysing Reiyligh number R/Reyligh.R')
require(gstat)
data(meuse)
meuse
head(meuse)
doc read_eas
system('dir')
system()
system('path')
system(command, intern = FALSE, wait = TRUE, input = NULL,
show.output.on.console = FALSE,
minimized = FALSE, invisible = FALSE)
system(dir, intern = FALSE, wait = TRUE, input = NULL,
show.output.on.console = FALSE,
minimized = FALSE, invisible = FALSE)
system(dir)
system('dir')
system('dir')
system('dir')
sysmtem('cmd')
system('cmd')
a = ali
system('dir')
print(system('dir'))
?system
library(geor)
library(GeoR)
library("geoR", lib.loc="C:/Users/eansar2/Documents/R/R-3.0.1/library")
#Reyligh number in R
source('E:/All important CMG files/Renewability study/R Uncertainty/AllinOne-kriging.R')
install.packages(c("AlgDesign", "boot", "class", "cluster", "effects", "evaluate", "foreign", "gstat", "KernSmooth", "lattice", "markdown", "MASS", "Matrix", "mgcv", "mvtnorm", "nnet", "plyr", "rpart", "seriation", "sm", "sp", "spacetime", "spatial", "survival", "xtable", "zoo"))
source('E:/All important CMG files/Renewability study/R Uncertainty/AllinOne-kriging.R')
getwd()
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
View(data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
getwd()
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
source('~/.active-rstudio-document')
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
View(data)
View(design.fact)
View(design.grid)
View(design.fact)
View(data)
View(design.fact)
View(design.grid)
View(mean.response)
View(design.grid)
View(design.fact)
source('~/Desktop/Google Drive/Project R works/Uncertainty Ra/AllinOne-Polynomial.R')
summary(design.fact)
plot(design.fact)
plot(Ra.fit)
source('~/Desktop/Google Drive/Project R works/Uncertainty IN Regular DESIGN/LeastSquareResponse.R')
install.packages("Matrix")
require(Matrix)
Workbook1 <- read.csv("~/Desktop/Workbook1.csv", header=F)
View(Workbook1)
rankMatrix(WORKBOOK1)
rankMatrix(Workbook1)
lambda
source('~/Desktop/Google Drive/Ph.D. Reports/Ranges and Distributions/PLot_WellTest.R')
setwd("~/Desktop/Google Drive/Ph.D. Reports/Ranges and Distributions")
source('~/Desktop/Google Drive/Ph.D. Reports/Ranges and Distributions/PLot_WellTest.R')
lambda
fit.perm <- fitdist(perm.data$Permeability..mD.,"lnorm","mme")
plot(fit.perm)
bc <- boxcox(permeability~1)
lambda <- bc$x[which.max(bc$y)]
lambda
plot(1,1,xlim=x.lim,ylim=y.lim,xlab="Theoretical quantile",
ylab="Standardized observed quantile",
type="n",xpd=FALSE)
rm(list=ls())
#if (!is.null(dev.list())) dev.off()
require(MASS)
require(fitdistrplus)
#setwd("C:/Users/eansar2/Google Drive/Ph.D. Reports/Ranges and Distributions")
#setwd("~/Desktop/Google Drive/Ph.D. Reports/Ranges and Distributions")
data <- read.csv("./Data/Data.csv")
#       plotting and fitting distributions
#--------------------------------------------
#                   Permeability
#-------------------------------------------
data$Temperature <- (data$Temp...degree.F.-32)/1.8
data$Depth <- (data$Depth..ft.*0.3048)
perm.data<-data[!is.na(data$Permeability..mD.),]
permeability<-perm.data$Permeability..mD.
perm.data$color[perm.data$Source=="Source 1"]<-'red'
perm.data$color[perm.data$Source=="Source 2"]<-'blue'
par(mar=c(4,10,4,2))
dotchart(permeability,labels=perm.data$label,groups=perm.data$Source,
cex=0.8, color=perm.data$color,xlab="Permeability (md)")
fit.perm <- fitdist(perm.data$Permeability..mD.,"lnorm","mme")
plot(fit.perm)
summary(fit.perm)
bc <- boxcox(permeability~1)
lambda <- bc$x[which.max(bc$y)]
# Residuals
## boxCox(permeability~1) # gives lambda = 0.0606
qq.bc <- qqnorm(sort(permeability^(lambda)),type="l",plot.it=FALSE)
qq.none <- qqnorm(sort(permeability),plot.it=FALSE)
qq.log <- qq.log <- qqnorm(sort(log(permeability,10)),
type="l",plot.it=FALSE)
y.bc <- (qq.bc$y - mean(qq.bc$y))/sd(qq.bc$y)
y.none <- (qq.none$y - mean(qq.none$y))/sd(qq.none$y)
y.log <- (qq.log$y - mean(qq.log$y))/sd(qq.log$y)
y.lim <- range(y.bc,y.log,y.none)
y.lim[2] <- 4
x.lim <- range(qq.bc$x,qq.log$x,qq.none$x)
plot(1,1,xlim=x.lim,ylim=y.lim,xlab="Theoretical quantile",
ylab="Standardized observed quantile",
type="n",xpd=FALSE)
abline(0,1,lty=2)
lines(qq.none$x, y.none, lty=1,col="red")
lines(qq.log$x, y.log, lty=1, col="blue")
lines(qq.bc$x, y.bc, lty=1, col="orange")
legend("bottomright",c("Normal","No transform","Log", "Box-Cox"),
lty=c(2,1,1,1),col=c("black","red","blue","orange"),bty="n")
#---------------------------------------------
#                   Porosity
#---------------------------------------------
rm(list=ls())
#if (!is.null(dev.list())) dev.off()
require(MASS)
require(fitdistrplus)
#setwd("C:/Users/eansar2/Google Drive/Ph.D. Reports/Ranges and Distributions")
#setwd("~/Desktop/Google Drive/Ph.D. Reports/Ranges and Distributions")
data <- read.csv("./Data/Data.csv")
#       plotting and fitting distributions
#--------------------------------------------
#                   Permeability
#-------------------------------------------
data$Temperature <- (data$Temp...degree.F.-32)/1.8
data$Depth <- (data$Depth..ft.*0.3048)
perm.data<-data[!is.na(data$Permeability..mD.),]
permeability<-perm.data$Permeability..mD.
perm.data$color[perm.data$Source=="Source 1"]<-'red'
perm.data$color[perm.data$Source=="Source 2"]<-'blue'
par(mar=c(4,10,4,2))
dotchart(permeability,labels=perm.data$label,groups=perm.data$Source,
cex=0.8, color=perm.data$color,xlab="Permeability (md)")
fit.perm <- fitdist(perm.data$Permeability..mD.,"lnorm","mme")
plot(fit.perm)
summary(fit.perm)
bc <- boxcox(permeability~1)
lambda <- bc$x[which.max(bc$y)]
# Residuals
## boxCox(permeability~1) # gives lambda = 0.0606
qq.bc <- qqnorm(sort(permeability^(lambda)),type="l",plot.it=FALSE)
qq.none <- qqnorm(sort(permeability),plot.it=FALSE)
qq.log <- qq.log <- qqnorm(sort(log(permeability,10)),
type="l",plot.it=FALSE)
y.bc <- (qq.bc$y - mean(qq.bc$y))/sd(qq.bc$y)
y.none <- (qq.none$y - mean(qq.none$y))/sd(qq.none$y)
y.log <- (qq.log$y - mean(qq.log$y))/sd(qq.log$y)
y.lim <- range(y.bc,y.log,y.none)
y.lim[2] <- 4
x.lim <- range(qq.bc$x,qq.log$x,qq.none$x)
plot(1,1,xlim=x.lim,ylim=y.lim,xlab="Theoretical quantile",
ylab="Standardized observed quantile",
type="n",xpd=FALSE)
abline(0,1,lty=2)
lines(qq.none$x, y.none, lty=1,col="red")
lines(qq.log$x, y.log, lty=1, col="blue")
lines(qq.bc$x, y.bc, lty=1, col="orange")
legend("bottomright",c("Normal","No transform","Log", "Box-Cox"),
lty=c(2,1,1,1),col=c("black","red","blue","orange"),bty="n")
#---------------------------------------------
#                   Porosity
#---------------------------------------------
poro.data <- data[!is.na(data$Porosity),]
rm(list=ls())
#if (!is.null(dev.list())) dev.off()
require(MASS)
require(fitdistrplus)
#setwd("C:/Users/eansar2/Google Drive/Ph.D. Reports/Ranges and Distributions")
#setwd("~/Desktop/Google Drive/Ph.D. Reports/Ranges and Distributions")
data <- read.csv("./Data/Data.csv")
#       plotting and fitting distributions
#--------------------------------------------
#                   Permeability
#-------------------------------------------
data$Temperature <- (data$Temp...degree.F.-32)/1.8
data$Depth <- (data$Depth..ft.*0.3048)
perm.data<-data[!is.na(data$Permeability..mD.),]
permeability<-perm.data$Permeability..mD.
perm.data$color[perm.data$Source=="Source 1"]<-'red'
perm.data$color[perm.data$Source=="Source 2"]<-'blue'
par(mar=c(4,10,4,2))
dotchart(permeability,labels=perm.data$label,groups=perm.data$Source,
cex=0.8, color=perm.data$color,xlab="Permeability (md)")
fit.perm <- fitdist(perm.data$Permeability..mD.,"lnorm","mme")
plot(fit.perm)
summary(fit.perm)
bc <- boxcox(permeability~1)
lambda <- bc$x[which.max(bc$y)]
# Residuals
## boxCox(permeability~1) # gives lambda = 0.0606
qq.bc <- qqnorm(sort(permeability^(lambda)),type="l",plot.it=FALSE)
qq.none <- qqnorm(sort(permeability),plot.it=FALSE)
qq.log <- qq.log <- qqnorm(sort(log(permeability,10)),
type="l",plot.it=FALSE)
y.bc <- (qq.bc$y - mean(qq.bc$y))/sd(qq.bc$y)
y.none <- (qq.none$y - mean(qq.none$y))/sd(qq.none$y)
y.log <- (qq.log$y - mean(qq.log$y))/sd(qq.log$y)
y.lim <- range(y.bc,y.log,y.none)
y.lim[2] <- 4
x.lim <- range(qq.bc$x,qq.log$x,qq.none$x)
plot(1,1,xlim=x.lim,ylim=y.lim,xlab="Theoretical quantile",
ylab="Standardized observed quantile",
type="n",xpd=FALSE)
abline(0,1,lty=2)
lines(qq.none$x, y.none, lty=1,col="red")
lines(qq.log$x, y.log, lty=1, col="blue")
lines(qq.bc$x, y.bc, lty=1, col="orange")
legend("bottomright",c("Normal","No transform","Log", "Box-Cox"),
lty=c(2,1,1,1),col=c("black","red","blue","orange"),bty="n")
#---------------------------------------------
#                   Porosity
#---------------------------------------------
remove.packages("triangle")
remove.packages("triangle", lib="~/R/R-3.0.1/library")
